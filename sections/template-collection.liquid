<div>
    {% paginate collection.products by section.settings.number_of_products_per_page %}
        <div class="bg-[#423328] py-28">
            <h1 class="text-center text-white font-normal text-[74px] leading-[78px] -tracking-[2.96px]">{{ collection.title }}</h1>
        </div>

        <div class="max-w-[1600px] mx-auto px-6 pt-32">
            <div class="">
                <div class="flex flex-row gap-10">
                    <div class="max-w-[350px] w-full">
                        <h1 class="text-3xl text-[#423328] font-gambetta font-normal -tracking-[1.2px] mb-7">Filters</h1>
                        <div class="">

                            <!-- category -->
                            <div class="category-wrapper">
                                <h2 id="category-title" class="cursor-pointer text-sm uppercase font-generalSans font-semibold text-[#423328] flex items-center justify-between">
                                    Categories:
                                    <span id="toggle-icon" class="ml-2 transition-transform duration-300 text-[#423328]">
                                    {%  render 'icon-minus' %}
                                    {%  render 'icon-plus' %}
                                    </span>
                                </h2>

                                <ul id="category-list" class="transition-all duration-300 ease-in-out mt-3">
                                    {% for collection in collections %}
                                    <li class="mb-2">
                                        <a class="text-[#423328] hover:text-black text-base font-normal font-generalSans" href="{{ collection.url }}">
                                            {{ collection.title }} 
                                        </a>
                                    </li>
                                    {% endfor %}
                                </ul>
                            </div>
                            

                        </div>
                    </div>
                    <div class="w-full">
                        <div class="flex justify-between items-center mb-8">
                            <div class="text-[#423328] text-lg font-generalSans font-normal">
                                {% assign start_index = paginate.current_offset | plus: 1 %}
                                {% assign end_index = paginate.current_offset | plus: paginate.page_size %}
                                {% if end_index > paginate.items %}
                                    {% assign end_index = paginate.items %}
                                {% endif %}
                                Showing {{ start_index }} to {{ end_index }} of {{ paginate.items }} results
                            </div>

                            <!-- Sorting dropdown -->
                            <div>
                                <form method="get">
                                    <select class="bg-transparent text-[#423328] text-base font-generalSans font-medium" name="sort_by" id="sort_by" onchange="this.form.submit()">
                                        <option class="text-[#423328] text-base font-generalSans font-medium" value="manual" {% if collection.sort_by == 'manual' %}selected{% endif %}>Default sorting</option>
                                        <option class="text-[#423328] text-base font-generalSans font-medium" value="best-selling" {% if collection.sort_by == 'best-selling' %}selected{% endif %}>Best Selling</option>
                                        <option class="text-[#423328] text-base font-generalSans font-medium" value="title-ascending" {% if collection.sort_by == 'title-ascending' %}selected{% endif %}>Alphabetically, A-Z</option>
                                        <option class="text-[#423328] text-base font-generalSans font-medium" value="title-descending" {% if collection.sort_by == 'title-descending' %}selected{% endif %}>Alphabetically, Z-A</option>
                                        <option class="text-[#423328] text-base font-generalSans font-medium" value="price-ascending" {% if collection.sort_by == 'price-ascending' %}selected{% endif %}>Price, low to high</option>
                                        <option class="text-[#423328] text-base font-generalSans font-medium" value="price-descending" {% if collection.sort_by == 'price-descending' %}selected{% endif %}>Price, high to low</option>
                                        <option class="text-[#423328] text-base font-generalSans font-medium" value="created-descending" {% if collection.sort_by == 'created-descending' %}selected{% endif %}>Date, new to old</option>
                                        <option class="text-[#423328] text-base font-generalSans font-medium" value="created-ascending" {% if collection.sort_by == 'created-ascending' %}selected{% endif %}>Date, old to new</option>
                                    </select>
                                </form>
                            </div>
                        </div>

                        <!-- Products section -->
                        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6">
                            {% for product in collection.products %}
                                {% render 'product-card', product_product: product %}
                            {% else %}
                                <p>There are no products inside of this collection</p>
                            {% endfor %}
                        </div>
                    </div>
                </div>
            </div>
        </div>

        {% render 'pagination', pagination: paginate %}
    {% endpaginate %}
</div>


{% schema %}
{
    "name": "Template Collection",
    "settings": [
        {
            "type": "number",
            "id": "number_of_products_per_page",
            "default": 9,
            "label": "Number of products per page"
        }
    ]
}
{% endschema %}

<script>

    document.addEventListener("DOMContentLoaded", function() {
    const categoryTitle = document.getElementById('category-title');
    const categoryList = document.getElementById('category-list');
    const plusIcon = document.getElementById('plus-icon');
    const minusIcon = document.getElementById('minus-icon');

    // Add click event to the category title
    categoryTitle.addEventListener('click', function() {
        // Toggle the hidden class to show/hide the category list
        categoryList.classList.toggle('hidden');
        
        // Toggle the icons between + and -
        if (categoryList.classList.contains('hidden')) {
        plusIcon.classList.remove('hidden');
        minusIcon.classList.add('hidden');
        } else {
        plusIcon.classList.add('hidden');
        minusIcon.classList.remove('hidden');
        }
    });
    });

</script>